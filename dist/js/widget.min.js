if("undefined"==typeof config){var config={STORAGE_ENV:"prod"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.WebPage={},RiseVision.WebPage=function(e,t){"use strict";function n(){var t,n,a,o=e.getElementById("webpage-container"),i=e.getElementById("webpage-frame"),r=g.getInt("rsH")/g.getInt("rsW")*100,s=d.scrollHorizontal>0?d.scrollHorizontal:0,l=d.scrollVertical>0?d.scrollVertical:0,c=parseFloat(d.zoom);o&&i&&(t=o.getElementsByClassName("blocker")[0],o.style.visibility="hidden",0!==l&&(r+=l/g.getInt("rsW")*100),o.setAttribute("style","padding-bottom:"+r+"%"),t.style.display=d.interactive?"none":"block",i.setAttribute("scrolling",d.scrollbars?"yes":"no"),n="-ms-zoom:"+c+";-moz-transform: scale("+c+");-moz-transform-origin: 0 0;-o-transform: scale("+c+");-o-transform-origin: 0 0;-webkit-transform: scale("+c+");-webkit-transform-origin: 0 0;",n+="width: "+1/c*100+"%;height: "+1/c*100+"%;",i.setAttribute("style",n),(0!==s||0!==l)&&(a="margin: -"+l+"px 0 0 -"+s+"px;",i.setAttribute("style",n+a)))}function a(){var t=e.getElementById("webpage-frame"),n=e.getElementById("webpage-container"),o=/[?#&]/.test(m),i=Math.ceil(100*Math.random()),r=o?m+"&dummyVar="+i:m+"?dummyVar="+i;n&&t&&(t.onload=function(){t.onload=null,n.style.visibility="visible",d.refresh>0&&null===f&&(f=setInterval(function(){a()},d.refresh))},t.setAttribute("src",r))}function o(){var t=e.getElementById("webpage-frame");d.refresh>0&&clearInterval(f),t&&(t.src="about:blank")}function i(){t.rpc.call("","rsevent_ready",null,g.getString("id"),!0,!0,!0,!0,!1)}function r(){m=d.url,-1===m.indexOf("://")&&(m="http://"+m),n(),i()}function s(){o()}function l(){a()}function c(){o()}function u(e){g=new t.Prefs,d=e,b=new RiseVision.Common.Background(d),b.init(r)}var g=null,d={},m="",f=null,b=null;return{setAdditionalParams:u,pause:s,play:l,stop:c}}(document,gadgets);var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Background=function(e){"use strict";function t(){setTimeout(function(){s.style.backgroundImage="url("+e.background.image.url+g+"cb="+(new Date).getTime()+")",t()},c)}function n(){r=!0,e.background.useImage&&!u&&t(),i&&"function"==typeof i&&i()}function a(){var t;s=document.getElementById("background"),l=document.getElementById("backgroundStorage"),document.body.style.background=e.background.color,s?e.background.useImage?(s.className=e.background.image.position,s.className=e.background.image.scale?s.className+" scale-to-fit":s.className,u=0!==Object.keys(e.backgroundStorage).length,u?l?(l.addEventListener("rise-storage-response",function(e){r?e.detail&&e.detail.url&&e.detail.hasOwnProperty("changed")&&e.detail.changed&&(s.style.backgroundImage="url('"+e.detail.url.replace("'","\\'")+"')"):(e.detail&&e.detail.url&&(s.style.backgroundImage="url('"+e.detail.url.replace("'","\\'")+"')"),n())}),l.setAttribute("folder",e.backgroundStorage.folder),l.setAttribute("fileName",e.backgroundStorage.fileName),l.setAttribute("companyId",e.backgroundStorage.companyId),l.setAttribute("env",config.STORAGE_ENV),l.go()):console.log("Missing element with id value of 'backgroundStorage'"):(t=e.background.image.url.split("?"),g=1===t.length?"?":"&",s.style.backgroundImage="url("+e.background.image.url+")",n())):n():console.log("Missing element with id value of 'background'")}function o(e){r?e&&"function"==typeof e&&e():(e&&(i=e),a())}var i=null,r=!1,s=null,l=null,c=9e5,u=!1,g="";return{init:o}},function(e,t){"use strict";function n(){RiseVision.WebPage.play()}function a(){RiseVision.WebPage.pause()}function o(){RiseVision.WebPage.stop()}function i(e,t){Array.isArray(e)&&e.length>0&&"additionalParams"===e[0]&&Array.isArray(t)&&t.length>0&&RiseVision.WebPage.setAdditionalParams(JSON.parse(t[0]))}function r(){e.removeEventListener("WebComponentsReady",r),l&&""!==l&&(t.rpc.register("rscmd_play_"+l,n),t.rpc.register("rscmd_pause_"+l,a),t.rpc.register("rscmd_stop_"+l,o),t.rpc.register("rsparam_set_"+l,i),t.rpc.call("","rsparam_get",null,l,["additionalParams"]))}var s=new t.Prefs,l=s.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("WebComponentsReady",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-6"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,
