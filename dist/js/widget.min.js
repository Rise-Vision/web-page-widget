var WIDGET_COMMON_CONFIG={AUTH_PATH_URL:"v1/widget/auth",LOGGER_CLIENT_ID:"1088527147109-6q1o2vtihn34292pjt4ckhmhck0rk0o7.apps.googleusercontent.com",LOGGER_CLIENT_SECRET:"nlZyrcPLg6oEwO9f9Wfn29Wh",LOGGER_REFRESH_TOKEN:"1/xzt4kwzE1H7W9VnKB8cAaCx6zb4Es4nKEoqaYHdTD15IgOrJDtdun6zK6XiATCKT",STORAGE_ENV:"prod",STORE_URL:"https://store-dot-rvaserver2.appspot.com/"},RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.LoggerUtils=function(){"use strict";function e(e,t){var i=null;e.event?(i=e,i.file_url&&(i.file_format=n(i.file_url)),i.company_id=a,i.display_id=r,t(i)):t(i)}function t(){var e=new Date,t=e.getUTCFullYear(),n=e.getUTCMonth()+1,i=e.getUTCDate();return 10>n&&(n="0"+n),10>i&&(i="0"+i),t+n+i}function n(e){var t,n=/[?#&]/;return e&&"string"==typeof e?(t=e.substr(e.lastIndexOf(".")+1),n.test(t)&&(t=t.substr(0,-1!==t.indexOf("?")?t.indexOf("?"):t.length),t=t.substr(0,-1!==t.indexOf("#")?t.indexOf("#"):t.length),t=t.substr(0,-1!==t.indexOf("&")?t.indexOf("&"):t.length)),t.toLowerCase()):null}function i(e){var n={kind:"bigquery#tableDataInsertAllRequest",skipInvalidRows:!1,ignoreUnknownValues:!1,templateSuffix:t(),rows:[{insertId:""}]},i=JSON.parse(JSON.stringify(n));return i.rows[0].insertId=Math.random().toString(36).substr(2).toUpperCase(),i.rows[0].json=JSON.parse(JSON.stringify(e)),i.rows[0].json.ts=(new Date).toISOString(),i}function s(t,n){e(n,function(e){null!==e&&RiseVision.Common.Logger.log(t,e)})}function o(e,t){a=e,r=t}var r="",a="";return{getInsertData:i,getFileFormat:n,logEvent:s,setIds:o}}(),RiseVision.Common.Logger=function(e){"use strict";function t(e){var t=new XMLHttpRequest;return new Date-c<358e4?e({}):(t.open("POST",s,!0),t.onloadend=function(){var n=JSON.parse(t.response);e({token:n.access_token,refreshedAt:new Date})},t.send(),void 0)}function n(e){return r&&l===e}function i(i,s){function d(t){var n,r,a=new XMLHttpRequest;r=o.replace("TABLE_ID",i),c=t.refreshedAt||c,u=t.token||u,n=e.getInsertData(s),a.open("POST",r,!0),a.setRequestHeader("Content-Type","application/json"),a.setRequestHeader("Authorization","Bearer "+u),s.cb&&"function"==typeof s.cb&&(a.onloadend=function(){s.cb(a.response)}),a.send(JSON.stringify(n))}if(!(!i||!s||s.hasOwnProperty("event")&&!s.event||s.hasOwnProperty("event")&&n(s.event)))return r=!0,l=s.event,setTimeout(function(){r=!1},a),t(d)}var s="https://www.googleapis.com/oauth2/v3/token?client_id="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_ID+"&client_secret="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_SECRET+"&refresh_token="+WIDGET_COMMON_CONFIG.LOGGER_REFRESH_TOKEN+"&grant_type=refresh_token",o="https://www.googleapis.com/bigquery/v2/projects/client-side-events/datasets/Widget_Events/tables/TABLE_ID/insertAll",r=!1,a=1e3,l="",c=0,u="";return{log:i}}(RiseVision.Common.LoggerUtils),"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json");var config={STORAGE_ENV:"prod"},RiseVision=RiseVision||{};RiseVision.WebPage={},RiseVision.WebPage=function(e,t){"use strict";function n(){t.rpc.call("","rsevent_ready",null,f.getString("id"),!0,!0,!0,!0,!1)}function i(e){function t(t){var n=!0,i=t.target.getResponseHeader("X-Frame-Options");i&&"SAMEORIGIN"===i.toUpperCase()&&(c({event:"error",event_details:"X-Frame-Options header",error_details:"SAMEORIGIN",url:v}),_.show("Please note that the X-Frame-Options header has been detected in the request response for the web page provided and will prevent the web page from appearing."),n=!1),e&&"function"==typeof e&&e(n)}var n="https://proxy.risevision.com/"+v,i=new XMLHttpRequest;i.addEventListener("load",t),i.open("GET",n),i.send()}function s(){var t=e.getElementById("container"),n=e.getElementById("webpage-frame"),i=f.getInt("rsH")/f.getInt("rsW")*100;t&&n&&(t.style.visibility="hidden",t.setAttribute("style","padding-bottom:"+i+"%"))}function o(){var t=e.getElementById("webpage-frame"),n=e.getElementById("container");n&&t&&(t.onload=function(){t.onload=null,n.style.visibility="visible"},t.setAttribute("src",v))}function r(){var t=e.getElementById("webpage-frame");t&&(t.src="about:blank")}function a(){_=new RiseVision.Common.Message(e.getElementById("container"),e.getElementById("messageContainer")),v=m.url,-1===v.indexOf("://")&&(v="http://"+v),i(function(e){e&&s(),n()})}function l(){return"webpage_events"}function c(e){RiseVision.Common.LoggerUtils.logEvent(l(),e)}function u(){r()}function d(){o()}function g(){u()}function p(e){m=JSON.parse(JSON.stringify(e)),a()}var f=new t.Prefs,m=null,v="",_=null;return{getTableName:l,logEvent:c,setAdditionalParams:p,pause:u,play:d,stop:g}}(document,gadgets);var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,t){"use strict";function n(){try{t.style.height=e.style.height}catch(n){console.warn("Can't initialize Message - ",n.message)}}function i(){if(o){for(;t.firstChild;)t.removeChild(t.firstChild);t.style.display="none",e.style.visibility="visible",o=!1}}function s(n){var i,s=document.createDocumentFragment();o?(i=t.querySelector(".message"),i.innerHTML=n):(e.style.visibility="hidden",t.style.display="block",i=document.createElement("p"),i.innerHTML=n,i.setAttribute("class","message"),s.appendChild(i),t.appendChild(s),o=!0)}var o=!1;return n(),{hide:i,show:s}},function(e,t,n){"use strict";function i(e,t){var n,i="",s="";Array.isArray(e)&&e.length>0&&Array.isArray(t)&&t.length>0&&("companyId"===e[0]&&(i=t[0]),"displayId"===e[1]&&(s=t[1]?t[1]:"preview"),RiseVision.Common.LoggerUtils.setIds(i,s),"additionalParams"===e[2]&&(n=JSON.parse(t[2]),RiseVision.WebPage.setAdditionalParams(n)))}function s(){RiseVision.WebPage.play()}function o(){RiseVision.WebPage.pause()}function r(){RiseVision.WebPage.stop()}var a=(new n.Prefs).getString("id");e.oncontextmenu=function(){return!1},t.body.onmousedown=function(){return!1},a&&""!==a&&(n.rpc.register("rscmd_play_"+a,s),n.rpc.register("rscmd_pause_"+a,o),n.rpc.register("rscmd_stop_"+a,r),n.rpc.register("rsparam_set_"+a,i),n.rpc.call("","rsparam_get",null,a,["companyId","displayId","additionalParams"]))}(window,document,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-6"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL3dpZGdldC5taW4uanMiXSwibmFtZXMiOlsiV0lER0VUX0NPTU1PTl9DT05GSUciLCJBVVRIX1BBVEhfVVJMIiwiTE9HR0VSX0NMSUVOVF9JRCIsIkxPR0dFUl9DTElFTlRfU0VDUkVUIiwiTE9HR0VSX1JFRlJFU0hfVE9LRU4iLCJTVE9SQUdFX0VOViIsIlNUT1JFX1VSTCIsIlJpc2VWaXNpb24iLCJDb21tb24iLCJMb2dnZXJVdGlscyIsImdldEV2ZW50UGFyYW1zIiwicGFyYW1zIiwiY2IiLCJqc29uIiwiZXZlbnQiLCJmaWxlX3VybCIsImZpbGVfZm9ybWF0IiwiZ2V0RmlsZUZvcm1hdCIsImNvbXBhbnlfaWQiLCJjb21wYW55SWQiLCJkaXNwbGF5X2lkIiwiZGlzcGxheUlkIiwiZ2V0U3VmZml4IiwiZGF0ZSIsIkRhdGUiLCJ5ZWFyIiwiZ2V0VVRDRnVsbFllYXIiLCJtb250aCIsImdldFVUQ01vbnRoIiwiZGF5IiwiZ2V0VVRDRGF0ZSIsInVybCIsInN0ciIsImhhc1BhcmFtcyIsInN1YnN0ciIsImxhc3RJbmRleE9mIiwidGVzdCIsImluZGV4T2YiLCJsZW5ndGgiLCJ0b0xvd2VyQ2FzZSIsImdldEluc2VydERhdGEiLCJCQVNFX0lOU0VSVF9TQ0hFTUEiLCJraW5kIiwic2tpcEludmFsaWRSb3dzIiwiaWdub3JlVW5rbm93blZhbHVlcyIsInRlbXBsYXRlU3VmZml4Iiwicm93cyIsImluc2VydElkIiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInRvVXBwZXJDYXNlIiwidHMiLCJ0b0lTT1N0cmluZyIsImxvZ0V2ZW50IiwidGFibGUiLCJMb2dnZXIiLCJsb2ciLCJzZXRJZHMiLCJjb21wYW55IiwiZGlzcGxheSIsInV0aWxzIiwicmVmcmVzaFRva2VuIiwieGhyIiwiWE1MSHR0cFJlcXVlc3QiLCJyZWZyZXNoRGF0ZSIsIm9wZW4iLCJSRUZSRVNIX1VSTCIsIm9ubG9hZGVuZCIsInJlc3AiLCJyZXNwb25zZSIsInRva2VuIiwiYWNjZXNzX3Rva2VuIiwicmVmcmVzaGVkQXQiLCJzZW5kIiwiaXNUaHJvdHRsZWQiLCJ0aHJvdHRsZSIsImxhc3RFdmVudCIsInRhYmxlTmFtZSIsImluc2VydFdpdGhUb2tlbiIsInJlZnJlc2hEYXRhIiwiaW5zZXJ0RGF0YSIsInNlcnZpY2VVcmwiLCJyZXBsYWNlIiwic2V0UmVxdWVzdEhlYWRlciIsImhhc093blByb3BlcnR5Iiwic2V0VGltZW91dCIsInRocm90dGxlRGVsYXkiLCJhbmd1bGFyIiwibW9kdWxlIiwiY29uc3RhbnQiLCJjb25maWciLCJXZWJQYWdlIiwiZG9jdW1lbnQiLCJnYWRnZXRzIiwiX3JlYWR5IiwicnBjIiwiY2FsbCIsIl9wcmVmcyIsImdldFN0cmluZyIsIl92YWxpZGF0ZVVybCIsImhhbmRsZVByb3h5UmVzcG9uc2UiLCJlIiwic3VjY2VzcyIsImhlYWRlciIsInRhcmdldCIsImdldFJlc3BvbnNlSGVhZGVyIiwiZXZlbnRfZGV0YWlscyIsImVycm9yX2RldGFpbHMiLCJfdXJsIiwiX21lc3NhZ2UiLCJzaG93IiwicHJveHlVcmwiLCJyZXF1ZXN0IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9jb25maWd1cmVQYWdlIiwiY29udGFpbmVyIiwiZ2V0RWxlbWVudEJ5SWQiLCJmcmFtZSIsImFzcGVjdFJhdGlvIiwiZ2V0SW50Iiwic3R5bGUiLCJ2aXNpYmlsaXR5Iiwic2V0QXR0cmlidXRlIiwiX2xvYWRGcmFtZSIsIm9ubG9hZCIsIl91bmxvYWRGcmFtZSIsInNyYyIsIl9pbml0IiwiTWVzc2FnZSIsIl9hZGRpdGlvbmFsUGFyYW1zIiwiZ2V0VGFibGVOYW1lIiwicGF1c2UiLCJwbGF5Iiwic3RvcCIsInNldEFkZGl0aW9uYWxQYXJhbXMiLCJhZGRpdGlvbmFsUGFyYW1zIiwiUHJlZnMiLCJtYWluQ29udGFpbmVyIiwibWVzc2FnZUNvbnRhaW5lciIsImhlaWdodCIsImNvbnNvbGUiLCJ3YXJuIiwibWVzc2FnZSIsImhpZGUiLCJfYWN0aXZlIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwicCIsImZyYWdtZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJpbm5lckhUTUwiLCJjcmVhdGVFbGVtZW50IiwiYXBwZW5kQ2hpbGQiLCJ3aW5kb3ciLCJjb25maWd1cmUiLCJuYW1lcyIsInZhbHVlcyIsIkFycmF5IiwiaXNBcnJheSIsImlkIiwib25jb250ZXh0bWVudSIsImJvZHkiLCJvbm1vdXNlZG93biIsInJlZ2lzdGVyIiwiX2dhcSIsInB1c2giLCJnYSIsInR5cGUiLCJhc3luYyIsImxvY2F0aW9uIiwicHJvdG9jb2wiLCJzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwYXJlbnROb2RlIiwiaW5zZXJ0QmVmb3JlIl0sIm1hcHBpbmdzIjoiQUFDQSxHQUFJQSx1QkFDRkMsY0FBZSxpQkFDZkMsaUJBQWtCLDRFQUNsQkMscUJBQXNCLDJCQUN0QkMscUJBQXNCLHFFQUN0QkMsWUFBYSxPQUNiQyxVQUFXLDZDQUlUQyxXQUFhQSxjQUNqQkEsWUFBV0MsT0FBU0QsV0FBV0MsV0FFL0JELFdBQVdDLE9BQU9DLFlBQWMsV0FDOUIsWUFVQSxTQUFTQyxHQUFlQyxFQUFRQyxHQUM5QixHQUFJQyxHQUFPLElBR1BGLEdBQU9HLE9BQ1RELEVBQU9GLEVBRUhFLEVBQUtFLFdBQ1BGLEVBQUtHLFlBQWNDLEVBQWNKLEVBQUtFLFdBR3hDRixFQUFLSyxXQUFhQyxFQUNsQk4sRUFBS08sV0FBYUMsRUFFbEJULEVBQUdDLElBR0hELEVBQUdDLEdBS1AsUUFBU1MsS0FDUCxHQUFJQyxHQUFPLEdBQUlDLE1BQ2JDLEVBQU9GLEVBQUtHLGlCQUNaQyxFQUFRSixFQUFLSyxjQUFnQixFQUM3QkMsRUFBTU4sRUFBS08sWUFVYixPQVJZLElBQVJILElBQ0ZBLEVBQVEsSUFBTUEsR0FHTixHQUFORSxJQUNGQSxFQUFNLElBQU1BLEdBR1BKLEVBQU9FLEVBQVFFLEVBTXhCLFFBQVNaLEdBQWNjLEdBQ3JCLEdBQ0VDLEdBREVDLEVBQVksT0FHaEIsT0FBS0YsSUFBc0IsZ0JBQVJBLElBSW5CQyxFQUFNRCxFQUFJRyxPQUFPSCxFQUFJSSxZQUFZLEtBQU8sR0FHcENGLEVBQVVHLEtBQUtKLEtBQ2pCQSxFQUFNQSxFQUFJRSxPQUFPLEVBQXlCLEtBQXJCRixFQUFJSyxRQUFRLEtBQWVMLEVBQUlLLFFBQVEsS0FBT0wsRUFBSU0sUUFFdkVOLEVBQU1BLEVBQUlFLE9BQU8sRUFBeUIsS0FBckJGLEVBQUlLLFFBQVEsS0FBZUwsRUFBSUssUUFBUSxLQUFPTCxFQUFJTSxRQUV2RU4sRUFBTUEsRUFBSUUsT0FBTyxFQUF5QixLQUFyQkYsRUFBSUssUUFBUSxLQUFlTCxFQUFJSyxRQUFRLEtBQU9MLEVBQUlNLFNBR2xFTixFQUFJTyxlQWRGLEtBaUJYLFFBQVNDLEdBQWM3QixHQUNyQixHQUFJOEIsSUFDRkMsS0FBUSxxQ0FDUkMsaUJBQW1CLEVBQ25CQyxxQkFBdUIsRUFDdkJDLGVBQWtCdkIsSUFDbEJ3QixPQUNFQyxTQUFZLE1BR2hCQyxFQUFPQyxLQUFLQyxNQUFNRCxLQUFLRSxVQUFVVixHQU1qQyxPQUpBTyxHQUFLRixLQUFLLEdBQUdDLFNBQVdLLEtBQUtDLFNBQVNDLFNBQVMsSUFBSXBCLE9BQU8sR0FBR3FCLGNBQzdEUCxFQUFLRixLQUFLLEdBQUdqQyxLQUFPb0MsS0FBS0MsTUFBTUQsS0FBS0UsVUFBVXhDLElBQzlDcUMsRUFBS0YsS0FBSyxHQUFHakMsS0FBSzJDLElBQUssR0FBSWhDLE9BQU9pQyxjQUUzQlQsRUFHVCxRQUFTVSxHQUFTQyxFQUFPaEQsR0FDdkJELEVBQWVDLEVBQVEsU0FBU0UsR0FDakIsT0FBVEEsR0FDRk4sV0FBV0MsT0FBT29ELE9BQU9DLElBQUlGLEVBQU85QyxLQU0xQyxRQUFTaUQsR0FBT0MsRUFBU0MsR0FDdkI3QyxFQUFZNEMsRUFDWjFDLEVBQVkyQyxFQXRHYixHQUFJM0MsR0FBWSxHQUNmRixFQUFZLEVBd0dkLFFBQ0VxQixjQUFpQkEsRUFDakJ2QixjQUFpQkEsRUFDakJ5QyxTQUFZQSxFQUNaSSxPQUFVQSxNQUlkdkQsV0FBV0MsT0FBT29ELE9BQVMsU0FBVUssR0FDbkMsWUFpQkEsU0FBU0MsR0FBYXRELEdBQ3BCLEdBQUl1RCxHQUFNLEdBQUlDLGVBRWQsT0FBSSxJQUFJNUMsTUFBUzZDLEVBQWMsTUFDdEJ6RCxPQUdUdUQsRUFBSUcsS0FBSyxPQUFRQyxHQUFhLEdBQzlCSixFQUFJSyxVQUFZLFdBQ2QsR0FBSUMsR0FBT3hCLEtBQUtDLE1BQU1pQixFQUFJTyxTQUUxQjlELElBQUsrRCxNQUFPRixFQUFLRyxhQUFjQyxZQUFhLEdBQUlyRCxTQUdsRDJDLEVBQUlXLE9BUEpYLFFBVUYsUUFBU1ksR0FBWWpFLEdBQ25CLE1BQU9rRSxJQUFhQyxJQUFjbkUsRUFNcEMsUUFBUytDLEdBQUlxQixFQUFXdkUsR0FhdEIsUUFBU3dFLEdBQWdCQyxHQUN2QixHQUNFQyxHQUFZdEQsRUFEVm9DLEVBQU0sR0FBSUMsZUFHZHJDLEdBQU11RCxFQUFXQyxRQUFRLFdBQVlMLEdBQ3JDYixFQUFjZSxFQUFZUCxhQUFlUixFQUN6Q00sRUFBUVMsRUFBWVQsT0FBU0EsRUFDN0JVLEVBQWFwQixFQUFNekIsY0FBYzdCLEdBR2pDd0QsRUFBSUcsS0FBSyxPQUFRdkMsR0FBSyxHQUN0Qm9DLEVBQUlxQixpQkFBaUIsZUFBZ0Isb0JBQ3JDckIsRUFBSXFCLGlCQUFpQixnQkFBaUIsVUFBWWIsR0FFOUNoRSxFQUFPQyxJQUEyQixrQkFBZEQsR0FBT0MsS0FDN0J1RCxFQUFJSyxVQUFZLFdBQ2Q3RCxFQUFPQyxHQUFHdUQsRUFBSU8sWUFJbEJQLEVBQUlXLEtBQUs3QixLQUFLRSxVQUFVa0MsSUFoQzFCLE1BQUtILElBQWN2RSxHQUFXQSxFQUFPOEUsZUFBZSxXQUFhOUUsRUFBT0csT0FDckVILEVBQU84RSxlQUFlLFVBQVlWLEVBQVlwRSxFQUFPRyxRQWtDeEQsTUE5QkFrRSxJQUFXLEVBQ1hDLEVBQVl0RSxFQUFPRyxNQUVuQjRFLFdBQVcsV0FDVFYsR0FBVyxHQUNWVyxHQXlCSXpCLEVBQWFpQixHQTNFdEIsR0FBSVosR0FBYyx3REFBMER2RSxxQkFBcUJFLGlCQUM3RixrQkFBb0JGLHFCQUFxQkcscUJBQ3pDLGtCQUFvQkgscUJBQXFCSSxxQkFDekMsNEJBRUFrRixFQUFhLHNIQUNmTixHQUFXLEVBQ1hXLEVBQWdCLElBQ2hCVixFQUFZLEdBQ1paLEVBQWMsRUFDZE0sRUFBUSxFQW9FVixRQUNFZCxJQUFPQSxJQUVSdEQsV0FBV0MsT0FBT0MsYUFFRSxtQkFBWm1GLFVBQ1RBLFFBQVFDLE9BQU8sb0NBQ1pDLFNBQVMsaUJBQWtCLHdCQUMzQkEsU0FBUyxnQkFBaUIsUUFHL0IsSUFBSUMsU0FDRjFGLFlBQWEsUUFLWEUsV0FBYUEsY0FDakJBLFlBQVd5RixXQUVYekYsV0FBV3lGLFFBQVUsU0FBV0MsRUFBVUMsR0FFeEMsWUFZQSxTQUFTQyxLQUNQRCxFQUFRRSxJQUFJQyxLQUFLLEdBQUksZ0JBQWlCLEtBQU1DLEVBQU9DLFVBQVUsT0FDM0QsR0FBTSxHQUFNLEdBQU0sR0FBTSxHQUc1QixRQUFTQyxHQUFhNUYsR0FJcEIsUUFBUzZGLEdBQW9CQyxHQUMzQixHQUFJQyxJQUFVLEVBQ1pDLEVBQVNGLEVBQUVHLE9BQU9DLGtCQUFrQixrQkFFbENGLElBQW9DLGVBQXpCQSxFQUFPckQsZ0JBQ3BCRyxHQUNFNUMsTUFBUyxRQUNUaUcsY0FBaUIseUJBQ2pCQyxjQUFpQixhQUNqQmpGLElBQU9rRixJQUdUQyxFQUFTQyxLQUFLLGlLQUVkUixHQUFVLEdBR1IvRixHQUFxQixrQkFBUEEsSUFDaEJBLEVBQUcrRixHQXJCUCxHQUFJUyxHQUFXLGdDQUFrQ0gsRUFDL0NJLEVBQVUsR0FBSWpELGVBd0JoQmlELEdBQVFDLGlCQUFpQixPQUFRYixHQUNqQ1ksRUFBUS9DLEtBQUssTUFBTzhDLEdBQ3BCQyxFQUFRdkMsT0FHVixRQUFTeUMsS0FDUCxHQUFJQyxHQUFZdkIsRUFBU3dCLGVBQWUsYUFDdENDLEVBQVF6QixFQUFTd0IsZUFBZSxpQkFDaENFLEVBQWdCckIsRUFBT3NCLE9BQU8sT0FBU3RCLEVBQU9zQixPQUFPLE9BQVUsR0FFN0RKLElBQWFFLElBRWZGLEVBQVVLLE1BQU1DLFdBQWEsU0FHN0JOLEVBQVVPLGFBQWEsUUFBUyxrQkFBb0JKLEVBQWMsTUFJdEUsUUFBU0ssS0FDUCxHQUFJTixHQUFRekIsRUFBU3dCLGVBQWUsaUJBQ2xDRCxFQUFZdkIsRUFBU3dCLGVBQWUsWUFFbENELElBQWFFLElBQ2ZBLEVBQU1PLE9BQVMsV0FDYlAsRUFBTU8sT0FBUyxLQUdmVCxFQUFVSyxNQUFNQyxXQUFhLFdBRy9CSixFQUFNSyxhQUFhLE1BQU9kLElBSTlCLFFBQVNpQixLQUNQLEdBQUlSLEdBQVF6QixFQUFTd0IsZUFBZSxnQkFFaENDLEtBQ0ZBLEVBQU1TLElBQU0sZUFLaEIsUUFBU0MsS0FDUGxCLEVBQVcsR0FBSTNHLFlBQVdDLE9BQU82SCxRQUFRcEMsRUFBU3dCLGVBQWUsYUFDL0R4QixFQUFTd0IsZUFBZSxxQkFHMUJSLEVBQU9xQixFQUFrQnZHLElBR0csS0FBeEJrRixFQUFLNUUsUUFBUSxTQUNmNEUsRUFBTyxVQUFZQSxHQUdyQlQsRUFBYSxTQUFTRyxHQUNoQkEsR0FDRlksSUFHRnBCLE1BT0osUUFBU29DLEtBQ1AsTUFBTyxpQkFHVCxRQUFTN0UsR0FBUy9DLEdBQ2hCSixXQUFXQyxPQUFPQyxZQUFZaUQsU0FBUzZFLElBQWdCNUgsR0FHekQsUUFBUzZILEtBQ1BOLElBR0YsUUFBU08sS0FDUFQsSUFHRixRQUFTVSxLQUNQRixJQUdGLFFBQVNHLEdBQW9CQyxHQUMzQk4sRUFBb0JyRixLQUFLQyxNQUFNRCxLQUFLRSxVQUFVeUYsSUFFOUNSLElBbklGLEdBQUk5QixHQUFTLEdBQUlKLEdBQVEyQyxNQUN2QlAsRUFBb0IsS0FDcEJyQixFQUFPLEdBRUxDLEVBQVcsSUFrSWYsUUFDRXFCLGFBQWdCQSxFQUNoQjdFLFNBQVlBLEVBQ1ppRixvQkFBdUJBLEVBQ3ZCSCxNQUFTQSxFQUNUQyxLQUFRQSxFQUNSQyxLQUFRQSxJQUdUekMsU0FBVUMsUUFFYixJQUFJM0YsWUFBYUEsY0FDakJBLFlBQVdDLE9BQVNELFdBQVdDLFdBRS9CRCxXQUFXQyxPQUFPNkgsUUFBVSxTQUFVUyxFQUFlQyxHQUNuRCxZQUlBLFNBQVNYLEtBQ1AsSUFDRVcsRUFBaUJsQixNQUFNbUIsT0FBU0YsRUFBY2pCLE1BQU1tQixPQUNwRCxNQUFPdEMsR0FDUHVDLFFBQVFDLEtBQUssOEJBQStCeEMsRUFBRXlDLFVBT2xELFFBQVNDLEtBQ1AsR0FBSUMsRUFBUyxDQUVYLEtBQU9OLEVBQWlCTyxZQUN0QlAsRUFBaUJRLFlBQVlSLEVBQWlCTyxXQUloRFAsR0FBaUJsQixNQUFNN0QsUUFBVSxPQUdqQzhFLEVBQWNqQixNQUFNQyxXQUFhLFVBRWpDdUIsR0FBVSxHQUlkLFFBQVNsQyxHQUFLZ0MsR0FDWixHQUNFSyxHQURFQyxFQUFXeEQsU0FBU3lELHdCQUduQkwsSUFpQkhHLEVBQUlULEVBQWlCWSxjQUFjLFlBQ25DSCxFQUFFSSxVQUFZVCxJQWhCZEwsRUFBY2pCLE1BQU1DLFdBQWEsU0FFakNpQixFQUFpQmxCLE1BQU03RCxRQUFVLFFBR2pDd0YsRUFBSXZELFNBQVM0RCxjQUFjLEtBQzNCTCxFQUFFSSxVQUFZVCxFQUNkSyxFQUFFekIsYUFBYSxRQUFTLFdBRXhCMEIsRUFBU0ssWUFBWU4sR0FDckJULEVBQWlCZSxZQUFZTCxHQUU3QkosR0FBVSxHQWhEZCxHQUFJQSxJQUFVLENBMERkLE9BRkFqQixNQUdFZ0IsS0FBUUEsRUFDUmpDLEtBQVFBLElBTVosU0FBVzRDLEVBQVE5RCxFQUFVQyxHQUMzQixZQWFBLFNBQVM4RCxHQUFVQyxFQUFPQyxHQUN4QixHQUFJdEIsR0FDRnpILEVBQVksR0FDWkUsRUFBWSxFQUVWOEksT0FBTUMsUUFBUUgsSUFBVUEsRUFBTTNILE9BQVMsR0FBSzZILE1BQU1DLFFBQVFGLElBQVdBLEVBQU81SCxPQUFTLElBRXRFLGNBQWIySCxFQUFNLEtBQ1I5SSxFQUFZK0ksRUFBTyxJQUlKLGNBQWJELEVBQU0sS0FFTjVJLEVBREU2SSxFQUFPLEdBQ0dBLEVBQU8sR0FHUCxXQUtoQjNKLFdBQVdDLE9BQU9DLFlBQVlxRCxPQUFPM0MsRUFBV0UsR0FHL0IscUJBQWI0SSxFQUFNLEtBQ1JyQixFQUFtQjNGLEtBQUtDLE1BQU1nSCxFQUFPLElBRXJDM0osV0FBV3lGLFFBQVEyQyxvQkFBb0JDLEtBSzdDLFFBQVNILEtBQ1BsSSxXQUFXeUYsUUFBUXlDLE9BR3JCLFFBQVNELEtBQ1BqSSxXQUFXeUYsUUFBUXdDLFFBR3JCLFFBQVNFLEtBQ1BuSSxXQUFXeUYsUUFBUTBDLE9BckRyQixHQUFJMkIsSUFBSyxHQUFJbkUsR0FBUTJDLE9BQVF0QyxVQUFVLEtBR3ZDd0QsR0FBT08sY0FBZ0IsV0FDckIsT0FBTyxHQUdUckUsRUFBU3NFLEtBQUtDLFlBQWMsV0FDMUIsT0FBTyxHQWdETEgsR0FBYSxLQUFQQSxJQUNSbkUsRUFBUUUsSUFBSXFFLFNBQVMsY0FBZ0JKLEVBQUk1QixHQUN6Q3ZDLEVBQVFFLElBQUlxRSxTQUFTLGVBQWlCSixFQUFJN0IsR0FDMUN0QyxFQUFRRSxJQUFJcUUsU0FBUyxjQUFnQkosRUFBSTNCLEdBQ3pDeEMsRUFBUUUsSUFBSXFFLFNBQVMsZUFBaUJKLEVBQUlMLEdBQzFDOUQsRUFBUUUsSUFBSUMsS0FBSyxHQUFJLGNBQWUsS0FBTWdFLEdBQUssWUFBYSxZQUFhLHVCQUcxRU4sT0FBUTlELFNBQVVDLFFBS3JCLElBQUl3RSxNQUFPQSxRQUVYQSxNQUFLQyxNQUFNLGNBQWUsa0JBQzFCRCxLQUFLQyxNQUFNLG1CQUVYLFdBQ0UsR0FBSUMsR0FBSzNFLFNBQVM0RCxjQUFjLFNBQVdlLEdBQUdDLEtBQU8sa0JBQW1CRCxFQUFHRSxPQUFRLEVBQ25GRixFQUFHekMsS0FBTyxVQUFZbEMsU0FBUzhFLFNBQVNDLFNBQVcsY0FBZ0IsY0FBZ0IsNkJBQ25GLElBQUlDLEdBQUloRixTQUFTaUYscUJBQXFCLFVBQVUsRUFBSUQsR0FBRUUsV0FBV0MsYUFBYVIsRUFBSUsiLCJmaWxlIjoianMvd2lkZ2V0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGV4cG9ydGVkIFdJREdFVF9DT01NT05fQ09ORklHICovXG52YXIgV0lER0VUX0NPTU1PTl9DT05GSUcgPSB7XG4gIEFVVEhfUEFUSF9VUkw6IFwidjEvd2lkZ2V0L2F1dGhcIixcbiAgTE9HR0VSX0NMSUVOVF9JRDogXCIxMDg4NTI3MTQ3MTA5LTZxMW8ydnRpaG4zNDI5MnBqdDRja2htaGNrMHJrMG83LmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tXCIsXG4gIExPR0dFUl9DTElFTlRfU0VDUkVUOiBcIm5sWnlyY1BMZzZvRXdPOWY5V2ZuMjlXaFwiLFxuICBMT0dHRVJfUkVGUkVTSF9UT0tFTjogXCIxL3h6dDRrd3pFMUg3VzlWbktCOGNBYUN4NnpiNEVzNG5LRW9xYVlIZFREMTVJZ09ySkR0ZHVuNnpLNlhpQVRDS1RcIixcbiAgU1RPUkFHRV9FTlY6IFwicHJvZFwiLFxuICBTVE9SRV9VUkw6IFwiaHR0cHM6Ly9zdG9yZS1kb3QtcnZhc2VydmVyMi5hcHBzcG90LmNvbS9cIlxufTtcbi8qIGdsb2JhbCBXSURHRVRfQ09NTU9OX0NPTkZJRyAqL1xuXG52YXIgUmlzZVZpc2lvbiA9IFJpc2VWaXNpb24gfHwge307XG5SaXNlVmlzaW9uLkNvbW1vbiA9IFJpc2VWaXNpb24uQ29tbW9uIHx8IHt9O1xuXG5SaXNlVmlzaW9uLkNvbW1vbi5Mb2dnZXJVdGlscyA9IChmdW5jdGlvbigpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgIHZhciBkaXNwbGF5SWQgPSBcIlwiLFxuICAgIGNvbXBhbnlJZCA9IFwiXCI7XG5cbiAgLypcbiAgICogIFByaXZhdGUgTWV0aG9kc1xuICAgKi9cblxuICAvKiBSZXRyaWV2ZSBwYXJhbWV0ZXJzIHRvIHBhc3MgdG8gdGhlIGV2ZW50IGxvZ2dlci4gKi9cbiAgZnVuY3Rpb24gZ2V0RXZlbnRQYXJhbXMocGFyYW1zLCBjYikge1xuICAgIHZhciBqc29uID0gbnVsbDtcblxuICAgIC8vIGV2ZW50IGlzIHJlcXVpcmVkLlxuICAgIGlmIChwYXJhbXMuZXZlbnQpIHtcbiAgICAgIGpzb24gPSBwYXJhbXM7XG5cbiAgICAgIGlmIChqc29uLmZpbGVfdXJsKSB7XG4gICAgICAgIGpzb24uZmlsZV9mb3JtYXQgPSBnZXRGaWxlRm9ybWF0KGpzb24uZmlsZV91cmwpO1xuICAgICAgfVxuXG4gICAgICBqc29uLmNvbXBhbnlfaWQgPSBjb21wYW55SWQ7XG4gICAgICBqc29uLmRpc3BsYXlfaWQgPSBkaXNwbGF5SWQ7XG5cbiAgICAgIGNiKGpzb24pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGNiKGpzb24pO1xuICAgIH1cbiAgfVxuXG4gIC8vIEdldCBzdWZmaXggZm9yIEJRIHRhYmxlIG5hbWUuXG4gIGZ1bmN0aW9uIGdldFN1ZmZpeCgpIHtcbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCksXG4gICAgICB5ZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpLFxuICAgICAgbW9udGggPSBkYXRlLmdldFVUQ01vbnRoKCkgKyAxLFxuICAgICAgZGF5ID0gZGF0ZS5nZXRVVENEYXRlKCk7XG5cbiAgICBpZiAobW9udGggPCAxMCkge1xuICAgICAgbW9udGggPSBcIjBcIiArIG1vbnRoO1xuICAgIH1cblxuICAgIGlmIChkYXkgPCAxMCkge1xuICAgICAgZGF5ID0gXCIwXCIgKyBkYXk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHllYXIgKyBtb250aCArIGRheTtcbiAgfVxuXG4gIC8qXG4gICAqICBQdWJsaWMgTWV0aG9kc1xuICAgKi9cbiAgZnVuY3Rpb24gZ2V0RmlsZUZvcm1hdCh1cmwpIHtcbiAgICB2YXIgaGFzUGFyYW1zID0gL1s/IyZdLyxcbiAgICAgIHN0cjtcblxuICAgIGlmICghdXJsIHx8IHR5cGVvZiB1cmwgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHN0ciA9IHVybC5zdWJzdHIodXJsLmxhc3RJbmRleE9mKFwiLlwiKSArIDEpO1xuXG4gICAgLy8gZG9uJ3QgaW5jbHVkZSBhbnkgcGFyYW1zIGFmdGVyIHRoZSBmaWxlbmFtZVxuICAgIGlmIChoYXNQYXJhbXMudGVzdChzdHIpKSB7XG4gICAgICBzdHIgPSBzdHIuc3Vic3RyKDAgLChzdHIuaW5kZXhPZihcIj9cIikgIT09IC0xKSA/IHN0ci5pbmRleE9mKFwiP1wiKSA6IHN0ci5sZW5ndGgpO1xuXG4gICAgICBzdHIgPSBzdHIuc3Vic3RyKDAsIChzdHIuaW5kZXhPZihcIiNcIikgIT09IC0xKSA/IHN0ci5pbmRleE9mKFwiI1wiKSA6IHN0ci5sZW5ndGgpO1xuXG4gICAgICBzdHIgPSBzdHIuc3Vic3RyKDAsIChzdHIuaW5kZXhPZihcIiZcIikgIT09IC0xKSA/IHN0ci5pbmRleE9mKFwiJlwiKSA6IHN0ci5sZW5ndGgpO1xuICAgIH1cblxuICAgIHJldHVybiBzdHIudG9Mb3dlckNhc2UoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEluc2VydERhdGEocGFyYW1zKSB7XG4gICAgdmFyIEJBU0VfSU5TRVJUX1NDSEVNQSA9IHtcbiAgICAgIFwia2luZFwiOiBcImJpZ3F1ZXJ5I3RhYmxlRGF0YUluc2VydEFsbFJlcXVlc3RcIixcbiAgICAgIFwic2tpcEludmFsaWRSb3dzXCI6IGZhbHNlLFxuICAgICAgXCJpZ25vcmVVbmtub3duVmFsdWVzXCI6IGZhbHNlLFxuICAgICAgXCJ0ZW1wbGF0ZVN1ZmZpeFwiOiBnZXRTdWZmaXgoKSxcbiAgICAgIFwicm93c1wiOiBbe1xuICAgICAgICBcImluc2VydElkXCI6IFwiXCJcbiAgICAgIH1dXG4gICAgfSxcbiAgICBkYXRhID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShCQVNFX0lOU0VSVF9TQ0hFTUEpKTtcblxuICAgIGRhdGEucm93c1swXS5pbnNlcnRJZCA9IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyKS50b1VwcGVyQ2FzZSgpO1xuICAgIGRhdGEucm93c1swXS5qc29uID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShwYXJhbXMpKTtcbiAgICBkYXRhLnJvd3NbMF0uanNvbi50cyA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcblxuICAgIHJldHVybiBkYXRhO1xuICB9XG5cbiAgZnVuY3Rpb24gbG9nRXZlbnQodGFibGUsIHBhcmFtcykge1xuICAgIGdldEV2ZW50UGFyYW1zKHBhcmFtcywgZnVuY3Rpb24oanNvbikge1xuICAgICAgaWYgKGpzb24gIT09IG51bGwpIHtcbiAgICAgICAgUmlzZVZpc2lvbi5Db21tb24uTG9nZ2VyLmxvZyh0YWJsZSwganNvbik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKiBTZXQgdGhlIENvbXBhbnkgYW5kIERpc3BsYXkgSURzLiAqL1xuICBmdW5jdGlvbiBzZXRJZHMoY29tcGFueSwgZGlzcGxheSkge1xuICAgIGNvbXBhbnlJZCA9IGNvbXBhbnk7XG4gICAgZGlzcGxheUlkID0gZGlzcGxheTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgXCJnZXRJbnNlcnREYXRhXCI6IGdldEluc2VydERhdGEsXG4gICAgXCJnZXRGaWxlRm9ybWF0XCI6IGdldEZpbGVGb3JtYXQsXG4gICAgXCJsb2dFdmVudFwiOiBsb2dFdmVudCxcbiAgICBcInNldElkc1wiOiBzZXRJZHNcbiAgfTtcbn0pKCk7XG5cblJpc2VWaXNpb24uQ29tbW9uLkxvZ2dlciA9IChmdW5jdGlvbih1dGlscykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgUkVGUkVTSF9VUkwgPSBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92My90b2tlbj9jbGllbnRfaWQ9XCIgKyBXSURHRVRfQ09NTU9OX0NPTkZJRy5MT0dHRVJfQ0xJRU5UX0lEICtcbiAgICAgIFwiJmNsaWVudF9zZWNyZXQ9XCIgKyBXSURHRVRfQ09NTU9OX0NPTkZJRy5MT0dHRVJfQ0xJRU5UX1NFQ1JFVCArXG4gICAgICBcIiZyZWZyZXNoX3Rva2VuPVwiICsgV0lER0VUX0NPTU1PTl9DT05GSUcuTE9HR0VSX1JFRlJFU0hfVE9LRU4gK1xuICAgICAgXCImZ3JhbnRfdHlwZT1yZWZyZXNoX3Rva2VuXCI7XG5cbiAgdmFyIHNlcnZpY2VVcmwgPSBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2JpZ3F1ZXJ5L3YyL3Byb2plY3RzL2NsaWVudC1zaWRlLWV2ZW50cy9kYXRhc2V0cy9XaWRnZXRfRXZlbnRzL3RhYmxlcy9UQUJMRV9JRC9pbnNlcnRBbGxcIixcbiAgICB0aHJvdHRsZSA9IGZhbHNlLFxuICAgIHRocm90dGxlRGVsYXkgPSAxMDAwLFxuICAgIGxhc3RFdmVudCA9IFwiXCIsXG4gICAgcmVmcmVzaERhdGUgPSAwLFxuICAgIHRva2VuID0gXCJcIjtcblxuICAvKlxuICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiByZWZyZXNoVG9rZW4oY2IpIHtcbiAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICBpZiAobmV3IERhdGUoKSAtIHJlZnJlc2hEYXRlIDwgMzU4MDAwMCkge1xuICAgICAgcmV0dXJuIGNiKHt9KTtcbiAgICB9XG5cbiAgICB4aHIub3BlbihcIlBPU1RcIiwgUkVGUkVTSF9VUkwsIHRydWUpO1xuICAgIHhoci5vbmxvYWRlbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciByZXNwID0gSlNPTi5wYXJzZSh4aHIucmVzcG9uc2UpO1xuXG4gICAgICBjYih7IHRva2VuOiByZXNwLmFjY2Vzc190b2tlbiwgcmVmcmVzaGVkQXQ6IG5ldyBEYXRlKCkgfSk7XG4gICAgfTtcblxuICAgIHhoci5zZW5kKCk7XG4gIH1cblxuICBmdW5jdGlvbiBpc1Rocm90dGxlZChldmVudCkge1xuICAgIHJldHVybiB0aHJvdHRsZSAmJiAobGFzdEV2ZW50ID09PSBldmVudCk7XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGxvZyh0YWJsZU5hbWUsIHBhcmFtcykge1xuICAgIGlmICghdGFibGVOYW1lIHx8ICFwYXJhbXMgfHwgKHBhcmFtcy5oYXNPd25Qcm9wZXJ0eShcImV2ZW50XCIpICYmICFwYXJhbXMuZXZlbnQpIHx8XG4gICAgICAocGFyYW1zLmhhc093blByb3BlcnR5KFwiZXZlbnRcIikgJiYgaXNUaHJvdHRsZWQocGFyYW1zLmV2ZW50KSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aHJvdHRsZSA9IHRydWU7XG4gICAgbGFzdEV2ZW50ID0gcGFyYW1zLmV2ZW50O1xuXG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICB0aHJvdHRsZSA9IGZhbHNlO1xuICAgIH0sIHRocm90dGxlRGVsYXkpO1xuXG4gICAgZnVuY3Rpb24gaW5zZXJ0V2l0aFRva2VuKHJlZnJlc2hEYXRhKSB7XG4gICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCksXG4gICAgICAgIGluc2VydERhdGEsIHVybDtcblxuICAgICAgdXJsID0gc2VydmljZVVybC5yZXBsYWNlKFwiVEFCTEVfSURcIiwgdGFibGVOYW1lKTtcbiAgICAgIHJlZnJlc2hEYXRlID0gcmVmcmVzaERhdGEucmVmcmVzaGVkQXQgfHwgcmVmcmVzaERhdGU7XG4gICAgICB0b2tlbiA9IHJlZnJlc2hEYXRhLnRva2VuIHx8IHRva2VuO1xuICAgICAgaW5zZXJ0RGF0YSA9IHV0aWxzLmdldEluc2VydERhdGEocGFyYW1zKTtcblxuICAgICAgLy8gSW5zZXJ0IHRoZSBkYXRhLlxuICAgICAgeGhyLm9wZW4oXCJQT1NUXCIsIHVybCwgdHJ1ZSk7XG4gICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcihcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XG4gICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcihcIkF1dGhvcml6YXRpb25cIiwgXCJCZWFyZXIgXCIgKyB0b2tlbik7XG5cbiAgICAgIGlmIChwYXJhbXMuY2IgJiYgdHlwZW9mIHBhcmFtcy5jYiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHhoci5vbmxvYWRlbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICBwYXJhbXMuY2IoeGhyLnJlc3BvbnNlKTtcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgeGhyLnNlbmQoSlNPTi5zdHJpbmdpZnkoaW5zZXJ0RGF0YSkpO1xuICAgIH1cblxuICAgIHJldHVybiByZWZyZXNoVG9rZW4oaW5zZXJ0V2l0aFRva2VuKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgXCJsb2dcIjogbG9nXG4gIH07XG59KShSaXNlVmlzaW9uLkNvbW1vbi5Mb2dnZXJVdGlscyk7XG4vKiBleHBvcnRlZCBjb25maWcgKi9cbmlmICh0eXBlb2YgYW5ndWxhciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICBhbmd1bGFyLm1vZHVsZShcInJpc2V2aXNpb24uY29tbW9uLmkxOG4uY29uZmlnXCIsIFtdKVxuICAgIC5jb25zdGFudChcIkxPQ0FMRVNfUFJFRklYXCIsIFwibG9jYWxlcy90cmFuc2xhdGlvbl9cIilcbiAgICAuY29uc3RhbnQoXCJMT0NBTEVTX1NVRklYXCIsIFwiLmpzb25cIik7XG59XG5cbnZhciBjb25maWcgPSB7XG4gIFNUT1JBR0VfRU5WOiBcInByb2RcIlxufTtcblxuLyogZ2xvYmFsIGdhZGdldHMgKi9cblxudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xuUmlzZVZpc2lvbi5XZWJQYWdlID0ge307XG5cblJpc2VWaXNpb24uV2ViUGFnZSA9IChmdW5jdGlvbiAoZG9jdW1lbnQsIGdhZGdldHMpIHtcblxuICBcInVzZSBzdHJpY3RcIjtcblxuICAvLyBwcml2YXRlIHZhcmlhYmxlc1xuICB2YXIgX3ByZWZzID0gbmV3IGdhZGdldHMuUHJlZnMoKSxcbiAgICBfYWRkaXRpb25hbFBhcmFtcyA9IG51bGwsXG4gICAgX3VybCA9IFwiXCI7XG5cbiAgdmFyIF9tZXNzYWdlID0gbnVsbDtcblxuICAvKlxuICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBfcmVhZHkoKSB7XG4gICAgZ2FkZ2V0cy5ycGMuY2FsbChcIlwiLCBcInJzZXZlbnRfcmVhZHlcIiwgbnVsbCwgX3ByZWZzLmdldFN0cmluZyhcImlkXCIpLFxuICAgICAgdHJ1ZSwgdHJ1ZSwgdHJ1ZSwgdHJ1ZSwgZmFsc2UpO1xuICB9XG5cbiAgZnVuY3Rpb24gX3ZhbGlkYXRlVXJsKGNiKSB7XG4gICAgdmFyIHByb3h5VXJsID0gXCJodHRwczovL3Byb3h5LnJpc2V2aXNpb24uY29tL1wiICsgX3VybCxcbiAgICAgIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuICAgIGZ1bmN0aW9uIGhhbmRsZVByb3h5UmVzcG9uc2UoZSkge1xuICAgICAgdmFyIHN1Y2Nlc3MgPSB0cnVlLFxuICAgICAgICBoZWFkZXIgPSBlLnRhcmdldC5nZXRSZXNwb25zZUhlYWRlcihcIlgtRnJhbWUtT3B0aW9uc1wiKTtcblxuICAgICAgaWYgKGhlYWRlciAmJiAoaGVhZGVyLnRvVXBwZXJDYXNlKCkgPT09IFwiU0FNRU9SSUdJTlwiKSkge1xuICAgICAgICBsb2dFdmVudCh7XG4gICAgICAgICAgXCJldmVudFwiOiBcImVycm9yXCIsXG4gICAgICAgICAgXCJldmVudF9kZXRhaWxzXCI6IFwiWC1GcmFtZS1PcHRpb25zIGhlYWRlclwiLFxuICAgICAgICAgIFwiZXJyb3JfZGV0YWlsc1wiOiBcIlNBTUVPUklHSU5cIixcbiAgICAgICAgICBcInVybFwiOiBfdXJsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIF9tZXNzYWdlLnNob3coXCJQbGVhc2Ugbm90ZSB0aGF0IHRoZSBYLUZyYW1lLU9wdGlvbnMgaGVhZGVyIGhhcyBiZWVuIGRldGVjdGVkIGluIHRoZSByZXF1ZXN0IHJlc3BvbnNlIGZvciB0aGUgd2ViIHBhZ2UgcHJvdmlkZWQgYW5kIHdpbGwgcHJldmVudCB0aGUgd2ViIHBhZ2UgZnJvbSBhcHBlYXJpbmcuXCIpO1xuXG4gICAgICAgIHN1Y2Nlc3MgPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNiICYmICh0eXBlb2YgY2IgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICAgICAgY2Ioc3VjY2Vzcyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBoYW5kbGVQcm94eVJlc3BvbnNlKTtcbiAgICByZXF1ZXN0Lm9wZW4oXCJHRVRcIiwgcHJveHlVcmwpO1xuICAgIHJlcXVlc3Quc2VuZCgpO1xuICB9XG5cbiAgZnVuY3Rpb24gX2NvbmZpZ3VyZVBhZ2UoKSB7XG4gICAgdmFyIGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGFpbmVyXCIpLFxuICAgICAgZnJhbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndlYnBhZ2UtZnJhbWVcIiksXG4gICAgICBhc3BlY3RSYXRpbyA9ICAoX3ByZWZzLmdldEludChcInJzSFwiKSAvIF9wcmVmcy5nZXRJbnQoXCJyc1dcIikpICogMTAwO1xuXG4gICAgaWYgKGNvbnRhaW5lciAmJiBmcmFtZSkge1xuICAgICAgLy8gSGlkaW5nIGlmcmFtZSBjb250YWluZXIsIHZpc2libGUgd2hlbiB0aGUgaWZyYW1lIHN1Y2Nlc3NmdWxseSBsb2Fkc1xuICAgICAgY29udGFpbmVyLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xuXG4gICAgICAvLyBpbXBsZW1lbnQgcmVzcG9uc2l2ZSBpZnJhbWVcbiAgICAgIGNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBcInBhZGRpbmctYm90dG9tOlwiICsgYXNwZWN0UmF0aW8gKyBcIiVcIik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gX2xvYWRGcmFtZSgpIHtcbiAgICB2YXIgZnJhbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndlYnBhZ2UtZnJhbWVcIiksXG4gICAgICBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbnRhaW5lclwiKTtcblxuICAgIGlmIChjb250YWluZXIgJiYgZnJhbWUpIHtcbiAgICAgIGZyYW1lLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZnJhbWUub25sb2FkID0gbnVsbDtcblxuICAgICAgICAvLyBTaG93IHRoZSBpZnJhbWUgY29udGFpbmVyXG4gICAgICAgIGNvbnRhaW5lci5zdHlsZS52aXNpYmlsaXR5ID0gXCJ2aXNpYmxlXCI7XG4gICAgICB9O1xuXG4gICAgICBmcmFtZS5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgX3VybCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gX3VubG9hZEZyYW1lKCkge1xuICAgIHZhciBmcmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2VicGFnZS1mcmFtZVwiKTtcblxuICAgIGlmIChmcmFtZSkge1xuICAgICAgZnJhbWUuc3JjID0gXCJhYm91dDpibGFua1wiO1xuICAgIH1cblxuICB9XG5cbiAgZnVuY3Rpb24gX2luaXQoKSB7XG4gICAgX21lc3NhZ2UgPSBuZXcgUmlzZVZpc2lvbi5Db21tb24uTWVzc2FnZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbnRhaW5lclwiKSxcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWVzc2FnZUNvbnRhaW5lclwiKSk7XG5cbiAgICAvLyBDb25maWd1cmUgdGhlIHZhbHVlIGZvciBfdXJsXG4gICAgX3VybCA9IF9hZGRpdGlvbmFsUGFyYW1zLnVybDtcblxuICAgIC8vIEFkZCBodHRwOi8vIGlmIG5vIHByb3RvY29sIHBhcmFtZXRlciBleGlzdHNcbiAgICBpZiAoX3VybC5pbmRleE9mKFwiOi8vXCIpID09PSAtMSkge1xuICAgICAgX3VybCA9IFwiaHR0cDovL1wiICsgX3VybDtcbiAgICB9XG5cbiAgICBfdmFsaWRhdGVVcmwoZnVuY3Rpb24oc3VjY2Vzcykge1xuICAgICAgaWYgKHN1Y2Nlc3MpIHtcbiAgICAgICAgX2NvbmZpZ3VyZVBhZ2UoKTtcbiAgICAgIH1cblxuICAgICAgX3JlYWR5KCk7XG4gICAgfSk7XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGdldFRhYmxlTmFtZSgpIHtcbiAgICByZXR1cm4gXCJ3ZWJwYWdlX2V2ZW50c1wiO1xuICB9XG5cbiAgZnVuY3Rpb24gbG9nRXZlbnQocGFyYW1zKSB7XG4gICAgUmlzZVZpc2lvbi5Db21tb24uTG9nZ2VyVXRpbHMubG9nRXZlbnQoZ2V0VGFibGVOYW1lKCksIHBhcmFtcyk7XG4gIH1cblxuICBmdW5jdGlvbiBwYXVzZSgpIHtcbiAgICBfdW5sb2FkRnJhbWUoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBsYXkoKSB7XG4gICAgX2xvYWRGcmFtZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gc3RvcCgpIHtcbiAgICBwYXVzZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gc2V0QWRkaXRpb25hbFBhcmFtcyhhZGRpdGlvbmFsUGFyYW1zKSB7XG4gICAgX2FkZGl0aW9uYWxQYXJhbXMgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGFkZGl0aW9uYWxQYXJhbXMpKTtcblxuICAgIF9pbml0KCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIFwiZ2V0VGFibGVOYW1lXCI6IGdldFRhYmxlTmFtZSxcbiAgICBcImxvZ0V2ZW50XCI6IGxvZ0V2ZW50LFxuICAgIFwic2V0QWRkaXRpb25hbFBhcmFtc1wiOiBzZXRBZGRpdGlvbmFsUGFyYW1zLFxuICAgIFwicGF1c2VcIjogcGF1c2UsXG4gICAgXCJwbGF5XCI6IHBsYXksXG4gICAgXCJzdG9wXCI6IHN0b3BcbiAgfTtcblxufSkoZG9jdW1lbnQsIGdhZGdldHMpO1xuXG52YXIgUmlzZVZpc2lvbiA9IFJpc2VWaXNpb24gfHwge307XG5SaXNlVmlzaW9uLkNvbW1vbiA9IFJpc2VWaXNpb24uQ29tbW9uIHx8IHt9O1xuXG5SaXNlVmlzaW9uLkNvbW1vbi5NZXNzYWdlID0gZnVuY3Rpb24gKG1haW5Db250YWluZXIsIG1lc3NhZ2VDb250YWluZXIpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIF9hY3RpdmUgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBfaW5pdCgpIHtcbiAgICB0cnkge1xuICAgICAgbWVzc2FnZUNvbnRhaW5lci5zdHlsZS5oZWlnaHQgPSBtYWluQ29udGFpbmVyLnN0eWxlLmhlaWdodDtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJDYW4ndCBpbml0aWFsaXplIE1lc3NhZ2UgLSBcIiwgZS5tZXNzYWdlKTtcbiAgICB9XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGhpZGUoKSB7XG4gICAgaWYgKF9hY3RpdmUpIHtcbiAgICAgIC8vIGNsZWFyIGNvbnRlbnQgb2YgbWVzc2FnZSBjb250YWluZXJcbiAgICAgIHdoaWxlIChtZXNzYWdlQ29udGFpbmVyLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgbWVzc2FnZUNvbnRhaW5lci5yZW1vdmVDaGlsZChtZXNzYWdlQ29udGFpbmVyLmZpcnN0Q2hpbGQpO1xuICAgICAgfVxuXG4gICAgICAvLyBoaWRlIG1lc3NhZ2UgY29udGFpbmVyXG4gICAgICBtZXNzYWdlQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcblxuICAgICAgLy8gc2hvdyBtYWluIGNvbnRhaW5lclxuICAgICAgbWFpbkNvbnRhaW5lci5zdHlsZS52aXNpYmlsaXR5ID0gXCJ2aXNpYmxlXCI7XG5cbiAgICAgIF9hY3RpdmUgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzaG93KG1lc3NhZ2UpIHtcbiAgICB2YXIgZnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXG4gICAgICBwO1xuXG4gICAgaWYgKCFfYWN0aXZlKSB7XG4gICAgICAvLyBoaWRlIG1haW4gY29udGFpbmVyXG4gICAgICBtYWluQ29udGFpbmVyLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xuXG4gICAgICBtZXNzYWdlQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG5cbiAgICAgIC8vIGNyZWF0ZSBtZXNzYWdlIGVsZW1lbnRcbiAgICAgIHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICAgIHAuaW5uZXJIVE1MID0gbWVzc2FnZTtcbiAgICAgIHAuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJtZXNzYWdlXCIpO1xuXG4gICAgICBmcmFnbWVudC5hcHBlbmRDaGlsZChwKTtcbiAgICAgIG1lc3NhZ2VDb250YWluZXIuYXBwZW5kQ2hpbGQoZnJhZ21lbnQpO1xuXG4gICAgICBfYWN0aXZlID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gbWVzc2FnZSBhbHJlYWR5IGJlaW5nIHNob3duLCB1cGRhdGUgbWVzc2FnZSB0ZXh0XG4gICAgICBwID0gbWVzc2FnZUNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFwiLm1lc3NhZ2VcIik7XG4gICAgICBwLmlubmVySFRNTCA9IG1lc3NhZ2U7XG4gICAgfVxuICB9XG5cbiAgX2luaXQoKTtcblxuICByZXR1cm4ge1xuICAgIFwiaGlkZVwiOiBoaWRlLFxuICAgIFwic2hvd1wiOiBzaG93XG4gIH07XG59O1xuXG4vKiBnbG9iYWwgUmlzZVZpc2lvbiwgZ2FkZ2V0cyAqL1xuXG4oZnVuY3Rpb24gKHdpbmRvdywgZG9jdW1lbnQsIGdhZGdldHMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIGlkID0gbmV3IGdhZGdldHMuUHJlZnMoKS5nZXRTdHJpbmcoXCJpZFwiKTtcblxuICAvLyBEaXNhYmxlIGNvbnRleHQgbWVudSAocmlnaHQgY2xpY2sgbWVudSlcbiAgd2luZG93Lm9uY29udGV4dG1lbnUgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9O1xuXG4gIGRvY3VtZW50LmJvZHkub25tb3VzZWRvd24gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgZnVuY3Rpb24gY29uZmlndXJlKG5hbWVzLCB2YWx1ZXMpIHtcbiAgICB2YXIgYWRkaXRpb25hbFBhcmFtcyxcbiAgICAgIGNvbXBhbnlJZCA9IFwiXCIsXG4gICAgICBkaXNwbGF5SWQgPSBcIlwiO1xuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkobmFtZXMpICYmIG5hbWVzLmxlbmd0aCA+IDAgJiYgQXJyYXkuaXNBcnJheSh2YWx1ZXMpICYmIHZhbHVlcy5sZW5ndGggPiAwKSB7XG4gICAgICAvLyBjb21wYW55IGlkXG4gICAgICBpZiAobmFtZXNbMF0gPT09IFwiY29tcGFueUlkXCIpIHtcbiAgICAgICAgY29tcGFueUlkID0gdmFsdWVzWzBdO1xuICAgICAgfVxuXG4gICAgICAvLyBkaXNwbGF5IGlkXG4gICAgICBpZiAobmFtZXNbMV0gPT09IFwiZGlzcGxheUlkXCIpIHtcbiAgICAgICAgaWYgKHZhbHVlc1sxXSkge1xuICAgICAgICAgIGRpc3BsYXlJZCA9IHZhbHVlc1sxXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBkaXNwbGF5SWQgPSBcInByZXZpZXdcIjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBwcm92aWRlIExvZ2dlclV0aWxzIHRoZSBpZHMgdG8gdXNlXG4gICAgICBSaXNlVmlzaW9uLkNvbW1vbi5Mb2dnZXJVdGlscy5zZXRJZHMoY29tcGFueUlkLCBkaXNwbGF5SWQpO1xuXG4gICAgICAvLyBhZGRpdGlvbmFsIHBhcmFtc1xuICAgICAgaWYgKG5hbWVzWzJdID09PSBcImFkZGl0aW9uYWxQYXJhbXNcIikge1xuICAgICAgICBhZGRpdGlvbmFsUGFyYW1zID0gSlNPTi5wYXJzZSh2YWx1ZXNbMl0pO1xuXG4gICAgICAgIFJpc2VWaXNpb24uV2ViUGFnZS5zZXRBZGRpdGlvbmFsUGFyYW1zKGFkZGl0aW9uYWxQYXJhbXMpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHBsYXkoKSB7XG4gICAgUmlzZVZpc2lvbi5XZWJQYWdlLnBsYXkoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhdXNlKCkge1xuICAgIFJpc2VWaXNpb24uV2ViUGFnZS5wYXVzZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gc3RvcCgpIHtcbiAgICBSaXNlVmlzaW9uLldlYlBhZ2Uuc3RvcCgpO1xuICB9XG5cbiAgaWYgKGlkICYmIGlkICE9PSBcIlwiKSB7XG4gICAgZ2FkZ2V0cy5ycGMucmVnaXN0ZXIoXCJyc2NtZF9wbGF5X1wiICsgaWQsIHBsYXkpO1xuICAgIGdhZGdldHMucnBjLnJlZ2lzdGVyKFwicnNjbWRfcGF1c2VfXCIgKyBpZCwgcGF1c2UpO1xuICAgIGdhZGdldHMucnBjLnJlZ2lzdGVyKFwicnNjbWRfc3RvcF9cIiArIGlkLCBzdG9wKTtcbiAgICBnYWRnZXRzLnJwYy5yZWdpc3RlcihcInJzcGFyYW1fc2V0X1wiICsgaWQsIGNvbmZpZ3VyZSk7XG4gICAgZ2FkZ2V0cy5ycGMuY2FsbChcIlwiLCBcInJzcGFyYW1fZ2V0XCIsIG51bGwsIGlkLCBbXCJjb21wYW55SWRcIiwgXCJkaXNwbGF5SWRcIiwgXCJhZGRpdGlvbmFsUGFyYW1zXCJdKTtcbiAgfVxuXG59KSh3aW5kb3csIGRvY3VtZW50LCBnYWRnZXRzKTtcblxuXG5cbi8qIGpzaGludCBpZ25vcmU6c3RhcnQgKi9cbnZhciBfZ2FxID0gX2dhcSB8fCBbXTtcblxuX2dhcS5wdXNoKFsnX3NldEFjY291bnQnLCAnVUEtNTcwOTIxNTktNiddKTtcbl9nYXEucHVzaChbJ190cmFja1BhZ2V2aWV3J10pO1xuXG4oZnVuY3Rpb24oKSB7XG4gIHZhciBnYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOyBnYS50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7IGdhLmFzeW5jID0gdHJ1ZTtcbiAgZ2Euc3JjID0gKCdodHRwczonID09IGRvY3VtZW50LmxvY2F0aW9uLnByb3RvY29sID8gJ2h0dHBzOi8vc3NsJyA6ICdodHRwOi8vd3d3JykgKyAnLmdvb2dsZS1hbmFseXRpY3MuY29tL2dhLmpzJztcbiAgdmFyIHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07IHMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZ2EsIHMpO1xufSkoKTtcbi8qIGpzaGludCBpZ25vcmU6ZW5kICovXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
