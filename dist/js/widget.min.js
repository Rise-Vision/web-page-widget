if("undefined"==typeof config){var config={};"undefined"!=typeof angular&&(angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","components/rv-common-i18n/dist/locales/translation_").constant("LOCALES_SUFIX",".json"),angular.module("risevision.widget.common.storage-selector.config").value("STORAGE_MODAL","http://storage.risevision.com/~rvi/storage-client-rva-test/storage-modal.html#/files/"))}var RiseVision=RiseVision||{};RiseVision.WebPage={},RiseVision.WebPage=function(e,t){"use strict";function n(){var t,n,o,i=e.getElementById("webpage-container"),r=e.getElementById("webpage-frame"),a=u.getInt("rsH")/u.getInt("rsW")*100,s=m.scrollHorizontal>0?m.scrollHorizontal:0,l=m.scrollVertical>0?m.scrollVertical:0,c=parseFloat(m.zoom);i&&r&&(t=i.getElementsByClassName("blocker")[0],i.style.visibility="hidden",0!==l&&(a+=l/u.getInt("rsW")*100),i.setAttribute("style","padding-bottom:"+a+"%"),t.style.display=m.interactive?"none":"block",r.setAttribute("scrolling",m.scrollbars?"yes":"no"),n="-ms-zoom:"+c+";-moz-transform: scale("+c+");-moz-transform-origin: 0 0;-o-transform: scale("+c+");-o-transform-origin: 0 0;-webkit-transform: scale("+c+");-webkit-transform-origin: 0 0;",n+="width: "+1/c*100+"%;height: "+1/c*100+"%;",r.setAttribute("style",n),(0!==s||0!==l)&&(o="margin: -"+l+"px 0 0 -"+s+"px;",r.setAttribute("style",n+o)))}function o(){var t=e.getElementById("webpage-frame"),n=e.getElementById("webpage-container"),i=/[?#&]/.test(d),r=Math.ceil(100*Math.random()),a=i?d+"&dummyVar="+r:d+"?dummyVar="+r;n&&t&&(t.onload=function(){t.onload=null,n.style.visibility="visible",m.refresh>0&&null===f&&(f=setInterval(function(){o()},m.refresh))},t.setAttribute("src",a))}function i(){var t=e.getElementById("webpage-frame");m.refresh>0&&clearInterval(f),t&&(t.src="about:blank")}function r(){t.rpc.call("","rsevent_ready",null,u.getString("id"),!0,!0,!0,!0,!1)}function a(){d=m.url,-1===d.indexOf("://")&&(d="http://"+d),n(),r()}function s(){i()}function l(){o()}function c(){i()}function g(e){u=new t.Prefs,m=e,p=new RiseVision.Common.Background(m),p.init(a)}var u=null,m={},d="",f=null,p=null;return{setAdditionalParams:g,pause:s,play:l,stop:c}}(document,gadgets);var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Background=function(e){"use strict";function t(){a=!0,r&&"function"==typeof r&&r()}function n(e){l.removeEventListener("rise-storage-response",n),s.style.backgroundImage=Array.isArray(e.detail)?"url("+e.detail[0]+")":"url("+e.detail+")",t()}function o(){s=document.getElementById("background"),l=document.getElementById("backgroundStorage"),document.body.style.background=e.background.color,s?e.background.useImage?(s.className=e.background.image.position,s.className=e.background.image.scale?s.className+" scale-to-fit":s.className,0===Object.keys(e.backgroundStorage).length?(s.style.backgroundImage="url("+e.background.image.url+")",t()):l?(l.addEventListener("rise-storage-response",n),l.setAttribute("folder",e.backgroundStorage.folder),l.setAttribute("fileName",e.backgroundStorage.fileName),l.setAttribute("companyId",e.backgroundStorage.companyId),l.go()):console.log("Missing element with id value of 'backgroundStorage'")):t():console.log("Missing element with id value of 'background'")}function i(e){a?e&&"function"==typeof e&&e():(e&&(r=e),o())}var r=null,a=!1,s=null,l=null;return{init:i}},function(e,t){"use strict";function n(){RiseVision.WebPage.play()}function o(){RiseVision.WebPage.pause()}function i(){RiseVision.WebPage.stop()}function r(e,t){Array.isArray(e)&&e.length>0&&"additionalParams"===e[0]&&Array.isArray(t)&&t.length>0&&RiseVision.WebPage.setAdditionalParams(JSON.parse(t[0]))}var a=new t.Prefs,s=a.getString("id");e.oncontextmenu=function(){return!1},s&&""!==s&&(t.rpc.register("rscmd_play_"+s,n),t.rpc.register("rscmd_pause_"+s,o),t.rpc.register("rscmd_stop_"+s,i),t.rpc.register("rsparam_set_"+s,r),t.rpc.call("","rsparam_get",null,s,["additionalParams"]))}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-41395348-11"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,