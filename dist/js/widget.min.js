var WIDGET_COMMON_CONFIG={AUTH_PATH_URL:"v1/widget/auth",LOGGER_CLIENT_ID:"1088527147109-6q1o2vtihn34292pjt4ckhmhck0rk0o7.apps.googleusercontent.com",LOGGER_CLIENT_SECRET:"nlZyrcPLg6oEwO9f9Wfn29Wh",LOGGER_REFRESH_TOKEN:"1/xzt4kwzE1H7W9VnKB8cAaCx6zb4Es4nKEoqaYHdTD15IgOrJDtdun6zK6XiATCKT",STORAGE_ENV:"prod",STORE_URL:"https://store-dot-rvaserver2.appspot.com/"},RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.LoggerUtils=function(){"use strict";function e(e,t){var o=null;e.event?(o=e,o.file_url&&(o.file_format=n(o.file_url)),o.company_id=a,o.display_id=s,t(o)):t(o)}function t(){var e=new Date,t=e.getUTCFullYear(),n=e.getUTCMonth()+1,o=e.getUTCDate();return 10>n&&(n="0"+n),10>o&&(o="0"+o),t+n+o}function n(e){var t,n=/[?#&]/;return e&&"string"==typeof e?(t=e.substr(e.lastIndexOf(".")+1),n.test(t)&&(t=t.substr(0,-1!==t.indexOf("?")?t.indexOf("?"):t.length),t=t.substr(0,-1!==t.indexOf("#")?t.indexOf("#"):t.length),t=t.substr(0,-1!==t.indexOf("&")?t.indexOf("&"):t.length)),t.toLowerCase()):null}function o(e){var n={kind:"bigquery#tableDataInsertAllRequest",skipInvalidRows:!1,ignoreUnknownValues:!1,templateSuffix:t(),rows:[{insertId:""}]},o=JSON.parse(JSON.stringify(n));return o.rows[0].insertId=Math.random().toString(36).substr(2).toUpperCase(),o.rows[0].json=JSON.parse(JSON.stringify(e)),o.rows[0].json.ts=(new Date).toISOString(),o}function i(t,n){e(n,function(e){null!==e&&RiseVision.Common.Logger.log(t,e)})}function r(e,t){a=e,s=t}var s="",a="";return{getInsertData:o,getFileFormat:n,logEvent:i,setIds:r}}(),RiseVision.Common.Logger=function(e){"use strict";function t(e){var t=new XMLHttpRequest;return new Date-c<358e4?e({}):(t.open("POST",i,!0),t.onloadend=function(){var n=JSON.parse(t.response);e({token:n.access_token,refreshedAt:new Date})},t.send(),void 0)}function n(e){return s&&l===e}function o(o,i){function f(t){var n,s,a=new XMLHttpRequest;s=r.replace("TABLE_ID",o),c=t.refreshedAt||c,u=t.token||u,n=e.getInsertData(i),a.open("POST",s,!0),a.setRequestHeader("Content-Type","application/json"),a.setRequestHeader("Authorization","Bearer "+u),i.cb&&"function"==typeof i.cb&&(a.onloadend=function(){i.cb(a.response)}),a.send(JSON.stringify(n))}if(!(!o||!i||i.hasOwnProperty("event")&&!i.event||i.hasOwnProperty("event")&&n(i.event)))return s=!0,l=i.event,setTimeout(function(){s=!1},a),t(f)}var i="https://www.googleapis.com/oauth2/v3/token?client_id="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_ID+"&client_secret="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_SECRET+"&refresh_token="+WIDGET_COMMON_CONFIG.LOGGER_REFRESH_TOKEN+"&grant_type=refresh_token",r="https://www.googleapis.com/bigquery/v2/projects/client-side-events/datasets/Widget_Events/tables/TABLE_ID/insertAll",s=!1,a=1e3,l="",c=0,u="";return{log:o}}(RiseVision.Common.LoggerUtils);var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Utilities=function(){function e(e,t){var n="font-family: "+decodeURIComponent(t.font.family).replace(/'/g,"")+"; ",o="color: "+(t.color?t.color:t.forecolor)+"; ",i="font-size: "+(-1===t.size.indexOf("px")?t.size+"px; ":t.size+"; "),r="font-weight: "+(t.bold?"bold":"normal")+"; ",s="font-style: "+(t.italic?"italic":"normal")+"; ",a="text-decoration: "+(t.underline?"underline":"none")+"; ",l="background-color: "+(t.highlightColor?t.highlightColor:t.backcolor)+";";return"."+e+" {"+n+o+i+r+s+a+l+"}"}function t(e){for(var t=document.createElement("style"),n=0,o=e.length;o>n;n++)t.appendChild(document.createTextNode(e[n]));document.head.appendChild(t)}function n(n,r){function s(){r&&"function"==typeof r&&r()}function a(){s()}var l=null,c=[],u=[],f=[];if(!n||0===n.length)return s(),void 0;n.forEach(function(n){n.class&&n.fontStyle&&t([e(n.class,n.fontStyle)])});for(var g=0;g<n.length;g++)n[g].fontStyle&&n[g].fontStyle.font.type&&"google"===n[g].fontStyle.font.type&&(l=n[g].fontStyle.font.family.split(",")[0],l=l.replace(/'/g,""),c.push(l));for(g=0;g<n.length;g++)n[g].fontStyle&&n[g].fontStyle.font.type&&"custom"===n[g].fontStyle.font.type&&(u.push(decodeURIComponent(n[g].fontStyle.font.family).replace(/'/g,"")),f.push(n[g].fontStyle.font.url.replace(/'/g,"\\'")));if(0===c.length&&0===u.length)s();else{for(var d=0;d<u.length;d+=1)o(u[d],f[d]);c.length>0?i(c,a):s()}}function o(e,t,n){var o=null,i="font-family: "+e+"; src: url('"+t+"');";n=n||document,o=n.styleSheets[0],null!==o&&o.addRule("@font-face",i)}function i(e,t){WebFont.load({google:{families:e},active:function(){t&&"function"==typeof t&&t()},inactive:function(){t&&"function"==typeof t&&t()},timeout:2e3})}function r(e){for(var t=e.length,n=[],o=0;t>o;o++)n[o]=new Image,n[o].src=e[o]}function s(e){for(var t,n=window.location.search.substring(1),o=n.split("&"),i=0;i<o.length;i++)if(t=o[i].split("="),t[0]==e)return decodeURIComponent(t[1]);return""}function a(e){var t="";switch(e){case 404:t="The file does not exist or cannot be accessed.";break;case 507:t="There is not enough disk space to save the file on Rise Cache.";break;default:t="There was a problem retrieving the file from Rise Cache."}return t}function l(e){var t=document.createElement("div");return t.innerHTML=e,t.textContent}function c(e,t){var n=new XMLHttpRequest;if(e&&t&&"function"==typeof t){n.open("HEAD",e+"?cb="+(new Date).getTime(),!1);try{n.send(),t(n.status>=200&&n.status<304)}catch(o){t(!1)}}}return{getQueryParameter:s,getFontCssStyle:e,addCSSRules:t,loadFonts:n,loadCustomFont:o,loadGoogleFonts:i,preloadImages:r,getRiseCacheErrorMessage:a,unescapeHTML:l,hasInternetConnection:c}}(),"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json");var config={STORAGE_ENV:"prod"},RiseVision=RiseVision||{};RiseVision.WebPage={},RiseVision.WebPage=function(e,t){"use strict";function n(){t.rpc.call("","rsevent_ready",null,R.getString("id"),!0,!0,!0,!0,!1)}function o(e){function t(t){var n=!0,o=t.target.getResponseHeader("X-Frame-Options");o&&"SAMEORIGIN"===o.toUpperCase()&&(m({event:"error",event_details:"X-Frame-Options header",error_details:"SAMEORIGIN",url:E}),S.show("The owner of the Web Page at the URL provided does not allow the Page to be embedded within an iFrame. If possible, please contact the Web Page owner to discuss X-Frame-Options."),n=!1),e&&"function"==typeof e&&e(n)}var n="https://proxy.risevision.com/"+E,o=new XMLHttpRequest;o.addEventListener("load",t),o.open("GET",n),o.send()}function i(t){var n=e.querySelector(".blocker");n.style.display=w.interactivity.interactive?"none":"block",t.setAttribute("scrolling",w.interactivity.interactive&&w.interactivity.scrollbars?"yes":"no")}function r(){var t=e.getElementById("container"),n=e.querySelector(".webpage-frame"),o=R.getInt("rsH")/R.getInt("rsW")*100;t&&n&&(i(n),a(n),s(n),0!==_&&(o+=_/R.getInt("rsW")*100),t.setAttribute("style","padding-bottom:"+o+"%"))}function s(e){var t=parseFloat(w.zoom),n="",o="";o="-ms-zoom:"+t+";-moz-transform: scale("+t+");-moz-transform-origin: 0 0;-o-transform: scale("+t+");-o-transform-origin: 0 0;-webkit-transform: scale("+t+");-webkit-transform-origin: 0 0;transform: scale("+t+");transform-origin: 0 0;",n=e.getAttribute("style"),o+="width: "+1/t*100+"%;height: "+1/t*100+"%;",n&&(o=n+o),e.setAttribute("style",o)}function a(e){var t="",n="",o=0;w.region&&w.region.showRegion&&"region"===w.region.showRegion&&(w.region.horizontal>0&&(o=w.region.horizontal),w.region.vertical>0&&(_=w.region.vertical),(0!==o||0!==_)&&(t=e.getAttribute("style"),n="margin: -"+_+"px 0 0 -"+o+"px;",t&&(n=t+n),e.setAttribute("style",n)))}function l(){I=setInterval(function(){C.hasInternetConnection("img/transparent.png",function(e){e&&f()})},w.refresh)}function c(){var t=e.getElementById("container"),n=e.createElement("iframe");return n.className="webpage-frame",n.style.visibility="hidden",n.setAttribute("frameborder","0"),n.setAttribute("allowTransparency","true"),i(n),a(n),s(n),n.onload=function(){this.onload=null,this.style.visibility="visible",t.removeChild(e.querySelector(".webpage-frame"))},n.setAttribute("src",E),n}function u(){var t=e.querySelector(".webpage-frame");t.onload=function(){this.onload=null,O=!1,w.refresh>0&&null===I&&l()},t.setAttribute("src",E)}function f(){var t=e.getElementById("container"),n=e.createDocumentFragment(),o=c();n.appendChild(o),t.appendChild(n)}function g(){var t=e.querySelector(".webpage-frame");w.refresh>0&&clearInterval(I),t&&(t.src="about:blank")}function d(){S=new RiseVision.Common.Message(e.getElementById("container"),e.getElementById("messageContainer")),e.getElementById("messageContainer").style.height=R.getInt("rsH")+"px",E=w.url,-1===E.indexOf("://")&&(E="http://"+E),o(function(e){e&&r(),n()})}function p(){return"webpage_events"}function m(e){RiseVision.Common.LoggerUtils.logEvent(p(),e)}function h(){w.unload&&g()}function y(){(O||w.unload)&&u()}function v(){h()}function b(e){w=JSON.parse(JSON.stringify(e)),d()}var R=new t.Prefs,C=RiseVision.Common.Utilities,w=null,E="",_=0,I=null,O=!0,S=null;return{getTableName:p,logEvent:m,setAdditionalParams:b,pause:h,play:y,stop:v}}(document,gadgets);var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,t){"use strict";function n(){try{t.style.height=e.style.height}catch(n){console.warn("Can't initialize Message - ",n.message)}}function o(){if(r){for(;t.firstChild;)t.removeChild(t.firstChild);t.style.display="none",e.style.visibility="visible",r=!1}}function i(n){var o,i=document.createDocumentFragment();r?(o=t.querySelector(".message"),o.innerHTML=n):(e.style.visibility="hidden",t.style.display="block",o=document.createElement("p"),o.innerHTML=n,o.setAttribute("class","message"),i.appendChild(o),t.appendChild(i),r=!0)}var r=!1;return n(),{hide:o,show:i}},function(e,t,n){"use strict";function o(e,t){var n,o="",i="";Array.isArray(e)&&e.length>0&&Array.isArray(t)&&t.length>0&&("companyId"===e[0]&&(o=t[0]),"displayId"===e[1]&&(i=t[1]?t[1]:"preview"),RiseVision.Common.LoggerUtils.setIds(o,i),"additionalParams"===e[2]&&(n=JSON.parse(t[2]),RiseVision.WebPage.setAdditionalParams(n)))}function i(){RiseVision.WebPage.play()}function r(){RiseVision.WebPage.pause()}function s(){RiseVision.WebPage.stop()}var a=(new n.Prefs).getString("id");e.oncontextmenu=function(){return!1},t.body.onmousedown=function(){return!1},a&&""!==a&&(n.rpc.register("rscmd_play_"+a,i),n.rpc.register("rscmd_pause_"+a,r),n.rpc.register("rscmd_stop_"+a,s),n.rpc.register("rsparam_set_"+a,o),n.rpc.call("","rsparam_get",null,a,["companyId","displayId","additionalParams"]))}(window,document,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-6"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,
